HOW TO USE THE BUOY SCRIPTS AND THE PLOT DATA.

# ==============================================================================
#                                   SCRIPT SUMMARY
# ==============================================================================

# This script processes wave data from WW3 (WaveWatch III) model output and 
# compares it with observational buoy data.

# ==============================================================================
# Task                     | Description
# -------------------------|----------------------------------------------------
# 1. Imports and Setup     | - Imports necessary libraries
#                          | - Suppresses warnings for cleaner output
# -------------------------|----------------------------------------------------
# 2. Unzip and Untar       | - Defines function `unzip_and_untar`
#                          | - Extracts contents from gzipped tar files
# -------------------------|----------------------------------------------------
# 3. Main Script Execution | - Executes based on command line arguments
#                          | - Handles `spec.gz` mode
# -------------------------|----------------------------------------------------
# 4. Process Extracted Files| - Reads and processes extracted files
#                          | - Extracts wave parameters
# -------------------------|----------------------------------------------------
# 5. Model and Buoy Data   | - Supports various model output formats
#                          | - Performs quality checks and stores results
# -------------------------|----------------------------------------------------
# 6. Reading Buoy Data     | - Reads buoy data from netCDF files
#                          | - Performs quality checks and extracts parameters
# -------------------------|----------------------------------------------------
# 7. Combining Data        | - Aligns model and buoy data
#                          | - Ensures data validity
# -------------------------|----------------------------------------------------
# 8. Grid and Cyclone Info | - Incorporates grid and cyclone data if provided
#                          | - Includes latitude, longitude, depth, and coast distance
# -------------------------|----------------------------------------------------
# 9. Forecast Data Handling| - Reshapes and allocates forecast data
#                          | - Creates unique time dimension for cycles
# -------------------------|----------------------------------------------------
# 10. Saving to netCDF     | - Saves combined data to netCDF file
#                          | - Adds metadata and handles time units
# -------------------------|----------------------------------------------------
# 11. Cleanup              | - Deletes temporary files and directories
# ==============================================================================
# Overall, the script automates the extraction, processing, comparison, and 
# storage of wave model data with observational buoy data, ensuring data 
# integrity through quality checks and handling various input formats.

# Execute the Python script with the provided arguments
python3 your_python_script.py "$@"
Using WaveWatch III tools, this script is modelBuoycollocation.py.
python3 modelBuoycollocation.py "$@"



# After generating the netCDF file, validate buoy data using statistics and 
# plotting with `compare-all-buoy-sh.py`. The output format is:
# WW3.{model_name}{season}Buoy_{start date}to{stop_date}.nc

# ==============================================================================
#                   USING THE compare-all-buoy-sh.py CODE
# ==============================================================================

# This script processes and analyzes oceanographic model data from multiple 
# models, comparing them to observed data from buoys.

# Configuration File (configuration4.json)
# The script requires a configuration file in JSON format, specifying various 
# settings and paths for models and data directories.

# ==============================================================================
# Setting                | Description
# -----------------------|------------------------------------------------------
# process_buoys_separately | Processes buoys separately if true
# calculate_combined_statistics | Calculates combined statistics if true
# models                 | Paths to model data directories
# forecast_ranges        | Ranges for forecasting
# plot_combined_taylor   | Creates combined Taylor diagrams if true
# directory_path         | Output directory for results
# ==============================================================================

# Code Overview
# - Load Configuration: Reads configuration file for settings
# - Get Common Buoy IDs: Identifies common buoy IDs across models
# - Process Model Data: Extracts and compares wave height (HS) and wind speed
# - Plotting: Generates scatter plots and optional Taylor diagrams
# - Statistics Calculation: Calculates and saves statistical metrics

# ==============================================================================
# Running the Script
# ==============================================================================
# - Prepare the Configuration File: Ensure the JSON file is properly set up
# - Execute the Script: Run in Python environment with necessary libraries
# - View Output: Generated plots and statistical files saved in output directory

# ==============================================================================
# Key Functions            | Description
# -------------------------|----------------------------------------------------
# get_common_buoy_ids      | Identifies common buoy IDs across models
# process_model_data       | Processes data for forecast ranges, generates plots
# create_combined_taylor_plot | Creates Taylor diagrams for combined comparisons
# ==============================================================================

# Sample Usage
# - Ensure necessary dependencies are installed.
# - Place configuration file in the same directory as the script.
# - Run the script:
python compare-all-buoy-sh.py
(The code name can be changed by the user if necessary)
# - Check the output directory for generated plots and statistical files.

